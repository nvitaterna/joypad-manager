{"version":3,"sources":["webpack://JoypadManager/webpack/universalModuleDefinition","webpack://JoypadManager/webpack/bootstrap","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/createClass.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/inherits.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/typeof.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://JoypadManager/./src/JoypadEventTracker.ts","webpack://JoypadManager/./src/event-names.ts","webpack://JoypadManager/./src/JoypadEventEmitter.ts","webpack://JoypadManager/./src/mappings/default-mapping.ts","webpack://JoypadManager/./src/mappings/nintendo-switch.ts","webpack://JoypadManager/./src/mappings/xbox-mapping.ts","webpack://JoypadManager/./src/mappings/index.ts","webpack://JoypadManager/./src/generate-button-state.ts","webpack://JoypadManager/./src/Joypad.ts","webpack://JoypadManager/./src/JoypadManager.ts","webpack://JoypadManager/./src/index.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,iC;;;;;;ACfA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACNA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACPA,qBAAqB,mBAAO,CAAC,CAAkB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,2B;;;;;;ACjBA,cAAc,mBAAO,CAAC,CAAmB;;AAEzC,4BAA4B,mBAAO,CAAC,CAAyB;;AAE7D;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4C;;;;;;ACZA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iC;;;;;;ACTA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yB;;;;;;AChBA;AACA;AACA;AACA;;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","file":"joypad-manager.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JoypadManager\"] = factory();\n\telse\n\t\troot[\"JoypadManager\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","import type { JoypadEventName } from './JoypadEventEmitter';\n\nexport default class JoypadEventTracker {\n  callbacks: Function[] = [];\n\n  constructor(\n    public name: JoypadEventName,\n  ) {}\n\n  registerCallback(callback: Function) {\n    this.callbacks.push(callback);\n  }\n\n  unRegisterCallback(callback: Function) {\n    this.callbacks = this.callbacks.filter((c) => c !== callback);\n  }\n}\n","import type { JoypadEventName } from './JoypadEventEmitter';\n\nconst GAMEPAD_CONNECT = 'connect' as JoypadEventName;\nconst GAMEPAD_DISCONNECT = 'disconnect' as JoypadEventName;\nconst BUTTON_PRESS = 'buttonpress' as JoypadEventName;\nconst BUTTON_RELEASE = 'buttonrelease' as JoypadEventName;\nconst BUTTON_CHANGE = 'buttonchange' as JoypadEventName;\nconst AXIS_MOVE = 'axismove' as JoypadEventName;\n\nexport {\n  GAMEPAD_CONNECT,\n  GAMEPAD_DISCONNECT,\n  BUTTON_PRESS,\n  BUTTON_RELEASE,\n  AXIS_MOVE,\n  BUTTON_CHANGE,\n};\n","import JoypadEventTracker from './JoypadEventTracker';\nimport * as JOYPAD_EVENTS from './event-names';\n// eslint-disable-next-line import/no-duplicates\nimport type Joypad from './Joypad';\n// eslint-disable-next-line import/no-duplicates\nimport type { ButtonState, AxisState } from './Joypad';\n\nexport interface JoypadButtonEvent {\n  button: ButtonState;\n  joypad: Joypad;\n  nativeButton: GamepadButton;\n  nativePad: Gamepad;\n  index: number;\n}\n\n// no need for native axis - it's just a value\nexport interface JoypadAxisEvent {\n  axis: AxisState;\n  joypad: Joypad;\n  nativePad: Gamepad;\n  index: number;\n}\n\nexport interface JoypadEvent {\n  joypad: Joypad;\n  nativePad: Gamepad | null;\n}\n\nexport interface JoypadEventMap {\n  connect: JoypadEvent;\n  disconnect: JoypadEvent;\n  buttonpress: JoypadButtonEvent;\n  buttonrelease: JoypadButtonEvent;\n  buttonchange: JoypadButtonEvent;\n  axismove: JoypadAxisEvent;\n}\n\nexport type JoypadEventName = keyof JoypadEventMap;\n\nconst events = {\n  [JOYPAD_EVENTS.GAMEPAD_CONNECT]: new JoypadEventTracker(JOYPAD_EVENTS.GAMEPAD_CONNECT),\n  [JOYPAD_EVENTS.GAMEPAD_DISCONNECT]: new JoypadEventTracker(JOYPAD_EVENTS.GAMEPAD_DISCONNECT),\n  [JOYPAD_EVENTS.BUTTON_PRESS]: new JoypadEventTracker(JOYPAD_EVENTS.BUTTON_PRESS),\n  [JOYPAD_EVENTS.BUTTON_RELEASE]: new JoypadEventTracker(JOYPAD_EVENTS.BUTTON_RELEASE),\n  [JOYPAD_EVENTS.BUTTON_CHANGE]: new JoypadEventTracker(JOYPAD_EVENTS.BUTTON_CHANGE),\n  [JOYPAD_EVENTS.AXIS_MOVE]: new JoypadEventTracker(JOYPAD_EVENTS.AXIS_MOVE),\n} as {[key in JoypadEventName]: JoypadEventTracker};\n\nexport default class JoypadEventEmitter {\n  events = events;\n\n  dispatchEvent<K extends keyof JoypadEventMap>(eventName: JoypadEventName, event: JoypadEventMap[K]) {\n    this.events[eventName].callbacks.forEach((callback) => {\n      callback(event);\n    });\n  }\n\n  addEventListener<K extends keyof JoypadEventMap>(name: K, callback: (event: JoypadEventMap[K]) => void) {\n    this.events[name].registerCallback(callback);\n  }\n\n  removeEventListener<K extends keyof JoypadEventMap>(name: K, callback: (event: JoypadEventMap[K]) => void) {\n    this.events[name].unRegisterCallback(callback);\n  }\n}\n","export default {\n  ids: [\n    'default',\n  ],\n  buttons: [\n    {\n      name: 'buttonSouth',\n    },\n    {\n      name: 'buttonEast',\n    },\n    {\n      name: 'buttonWest',\n    },\n    {\n      name: 'buttonNorth',\n    },\n    {\n      name: 'leftShoulder',\n    },\n    {\n      name: 'rightShoulder',\n    },\n    {\n      name: 'leftTrigger',\n      analog: true,\n    },\n    {\n      name: 'rightTrigger',\n      analog: true,\n    },\n    {\n      name: 'select',\n    },\n    {\n      name: 'start',\n    },\n    {\n      name: 'leftStickButton',\n    },\n    {\n      name: 'rightStickButton',\n    },\n    {\n      name: 'up',\n    },\n    {\n      name: 'down',\n    },\n    {\n      name: 'left',\n    },\n    {\n      name: 'right',\n    },\n    {\n      name: 'home',\n    },\n    {\n      name: 'share',\n    },\n  ],\n  axes: [\n    {\n      name: 'leftStickX',\n    },\n    {\n      name: 'leftStickY',\n    },\n    {\n      name: 'rightStickX',\n    },\n    {\n      name: 'rightStickY',\n    },\n  ],\n};\n","import defaultMapping from './default-mapping';\n\nexport default {\n  ids: [\n    'Pro Controller (STANDARD GAMEPAD Vendor: 057e Product: 2009)',\n    '057e-2009-Pro Controller',\n    'Joy-Con L+R (STANDARD GAMEPAD Vendor: 057e Product: 200e)',\n  ],\n  buttons: [\n    {\n      name: 'buttonSouth',\n    },\n    {\n      name: 'buttonEast',\n    },\n    {\n      name: 'buttonWest',\n    },\n    {\n      name: 'buttonNorth',\n    },\n    {\n      name: 'leftShoulder',\n    },\n    {\n      name: 'rightShoulder',\n    },\n    {\n      name: 'leftTrigger',\n    },\n    {\n      name: 'rightTrigger',\n    },\n    {\n      name: 'select',\n    },\n    {\n      name: 'start',\n    },\n    {\n      name: 'leftStickButton',\n    },\n    {\n      name: 'rightStickButton',\n    },\n    {\n      name: 'up',\n    },\n    {\n      name: 'down',\n    },\n    {\n      name: 'left',\n    },\n    {\n      name: 'right',\n    },\n    {\n      name: 'home',\n    },\n    {\n      name: 'share',\n    },\n  ],\n  axes: defaultMapping.axes,\n};\n","import defaultMapping from './default-mapping';\n\nexport default {\n  ids: [\n    'Xbox 360 Controller (XInput STANDARD GAMEPAD)',\n    'xinput',\n  ],\n  buttons: defaultMapping.buttons,\n  axes: defaultMapping.axes,\n};\n","import nintendoSwitch from './nintendo-switch';\nimport defaultMapping from './default-mapping';\nimport xboxoneMapping from './xbox-mapping';\n\nexport interface AxisMapping {\n  name: string;\n}\n\nexport interface ButtonMapping {\n  name: string;\n  analog?: boolean;\n}\n\nexport interface JoypadMap {\n  ids: string[];\n  buttons?: ButtonMapping[];\n  axes?: AxisMapping[];\n}\n\nexport default [\n  defaultMapping,\n  xboxoneMapping,\n  nintendoSwitch,\n] as JoypadMap[];\n","import mappings, { JoypadMap } from '@/mappings';\nimport type { ButtonState, AxisState } from './Joypad';\n\nexport default function generateButtonState(id: string, customMappings: JoypadMap[]) {\n  const gamepadMap = mappings.concat(customMappings).find((mapping) => mapping.ids.includes(id)) || mappings[0];\n\n  const buttons = (gamepadMap.buttons || []).map((button) => ({\n    analog: !!button.analog,\n    value: 0,\n    name: button.name,\n  } as ButtonState));\n\n  const axes = (gamepadMap.axes || []).map((axis) => ({\n    value: 0,\n    name: axis.name,\n  } as AxisState));\n\n  return {\n    axes,\n    buttons,\n  };\n}\n","import JoypadEventEmitter from './JoypadEventEmitter';\nimport * as JOYPAD_EVENTS from './event-names';\nimport generateButtonState from './generate-button-state';\nimport type { JoypadConfig } from './JoypadManager';\nimport type { JoypadMap } from './mappings';\n\nexport interface AxisState {\n  name: string;\n  value: number;\n}\n\nexport interface ButtonState {\n  analog: boolean;\n  name: string;\n  value: number;\n}\n\nexport default class Joypad extends JoypadEventEmitter {\n  private buttonState!: ReturnType<typeof generateButtonState>;\n\n  private connected = false;\n\n  private nativePad?: Gamepad;\n\n  /**\n   * The id - retrieved from the native id\n   */\n  id?: string;\n\n  /**\n   * @param index the gamepad index in the JoypadManager.joypads array\n   * @param joypadConfig the joypad config\n   * @param mappings custom gamepad button mappings\n   */\n  constructor(\n    readonly index: number,\n    private joypadConfig: JoypadConfig,\n    private mappings: JoypadMap[],\n  ) {\n    super();\n  }\n\n  /**\n   * Set the id\n   * @param id the native id\n   */\n  private setId(id: string) {\n    if (this.id !== id) {\n      this.id = id;\n      this.buttonState = generateButtonState(this.id, this.mappings);\n    }\n  }\n\n  /**\n   * Check of the controller is connected\n   */\n  get isConnected() {\n    return this.connected;\n  }\n\n  /**\n   * The function to call to initiate the connect event\n   * @param nativePad the native HTML5 Gamepad\n   */\n  private connect(nativePad: Gamepad) {\n    this.setId(nativePad.id);\n    this.connected = true;\n    this.dispatchEvent('connect', {\n      joypad: this,\n      nativePad,\n    });\n  }\n\n  /**\n   * The function to call to initiate the disconnect event\n   * @param nativePad the native HTML5 Gamepad\n   */\n  private disconnect(nativePad: Gamepad | null) {\n    if (this.connected) {\n      this.connected = false;\n      this.dispatchEvent('disconnect', {\n        joypad: this,\n        nativePad,\n      });\n    }\n  }\n\n  /**\n   * The main update loop function\n   * @param nativePad the native HTML5 Gamepad object\n   */\n  update(nativePad: Gamepad | null) {\n    if (!nativePad || !nativePad.connected) {\n      if (this.connected) {\n        this.disconnect(nativePad);\n      }\n      return;\n    } if (nativePad?.connected && !this.connected) {\n      this.connect(nativePad);\n    }\n    if (nativePad && this.nativePad !== nativePad) {\n      this.nativePad = nativePad;\n    }\n    if (!this.id) {\n      this.setId(nativePad.id);\n    }\n    nativePad.buttons.forEach((nativeButton, index) => {\n      const buttonState = this.buttonState.buttons[index];\n      if (!buttonState) {\n        return;\n      }\n\n      // if a button value is different than the new value\n      if (nativeButton.value !== buttonState.value) {\n        // if it is analog, check against the threshold\n        if (buttonState.analog) {\n          if (\n            // always send event if value is 0 or 1\n            nativeButton.value === 1 || buttonState.value === 1 || nativeButton.value === 0 || buttonState.value === 0\n            // send event if the change is larger than the threshold\n            || Math.abs(nativeButton.value - buttonState.value) >= this.joypadConfig.analogThreshold) {\n            buttonState.value = nativeButton.value;\n            this.dispatchEvent('buttonchange', {\n              button: buttonState,\n              joypad: this,\n              nativeButton,\n              nativePad,\n              index,\n            });\n          }\n        }\n\n        // we will still process these events for analog buttons so analog buttons can be treated as digital\n        if (nativeButton.value === 1 && buttonState.value === 0) {\n          buttonState.value = nativeButton.value;\n          this.dispatchEvent('buttonpress', {\n            button: buttonState,\n            joypad: this,\n            nativeButton,\n            nativePad,\n            index,\n          });\n        } else if (nativeButton.value === 0 && buttonState.value === 1) {\n          buttonState.value = nativeButton.value;\n          this.dispatchEvent('buttonrelease', {\n            button: buttonState,\n            joypad: this,\n            nativeButton,\n            nativePad,\n            index,\n          });\n        }\n      }\n    });\n\n    nativePad.axes.forEach((value, index) => {\n      const axisState = this.buttonState.axes[index];\n      const nativeValue = Math.abs(value);\n      const stateValue = Math.abs(axisState.value);\n      const nativeIsDead = nativeValue <= this.joypadConfig.axisDeadzone;\n      const stateIsDead = stateValue <= this.joypadConfig.axisDeadzone;\n      if (!axisState) {\n        return;\n      }\n      if (nativeValue !== stateValue) {\n        if (\n        // do not send event if both are dead - means both are considered zero\n          stateIsDead !== nativeIsDead\n            // OR send event if either are dead or either are 1\n            || !stateIsDead || !nativeIsDead\n            // OR send event if they are 1\n            || nativeValue === 1 || stateValue === 1\n        ) {\n          axisState.value = nativeIsDead ? 0 : value;\n          this.dispatchEvent(JOYPAD_EVENTS.AXIS_MOVE, {\n            axis: axisState,\n            joypad: this,\n            nativePad,\n            index,\n          });\n        }\n      }\n    });\n  }\n\n  vibrate() {\n    console.log((this.nativePad as any)?.vibrationActuator);\n    this.nativePad?.hapticActuators?.[0].pulse(10, 5);\n    (this.nativePad as any)?.vibrationActuator.playEffect('dual-rumble', {\n      startDelay: 0,\n      duration: 1000,\n      weakMagnitude: 0,\n      strongMagnitude: 1.0,\n    });\n  }\n}\n","import Joypad from './Joypad';\nimport { JoypadMap } from './mappings';\n\nexport interface JoypadConfig {\n  /**\n   * The max number of joypads you plan on using.\n   * The JoypadManager will loop through this many Joypads each update cycle.\n   */\n  maxJoypads: number;\n  /**\n   * The threshold for analog movement.\n   */\n  analogThreshold: number;\n  /**\n   * The analog stick deadzone\n   */\n  axisDeadzone: number;\n}\n\n/**\n * The defaults for the joypad config\n */\nconst configDefaults: JoypadConfig = {\n  analogThreshold: 0.1,\n  axisDeadzone: 0.15,\n  maxJoypads: 4,\n};\n\nexport default class JoypadManager {\n  /**\n   * The array of joypads.\n   */\n  readonly joypads: Joypad[] = [];\n\n  /**\n   * Initiate the JoypadManager\n   * @param joypadConfig Optional Joypad configuration\n   * @param mappings Custom list of mappings\n   */\n  constructor(\n    joypadConfig: Partial<JoypadConfig> = {},\n    mappings: JoypadMap[] = [],\n  ) {\n    const parsedConfig = {\n      ...configDefaults,\n      ...joypadConfig,\n    };\n    for (let i = 0; i < parsedConfig.maxJoypads; i += 1) {\n      this.joypads[i] = new Joypad(i, parsedConfig, mappings);\n    }\n  }\n\n  /**\n   * The main update loop - updates every joypad and passes the reference to the native gamepad.\n   */\n  update() {\n    const nativePads = navigator.getGamepads();\n    this.joypads.forEach((joypad, index) => {\n      const nativePad = nativePads[index];\n      joypad.update(nativePad);\n    });\n  }\n}\n","import JoypadManager from './JoypadManager';\n\nexport default JoypadManager;\n"],"sourceRoot":""}