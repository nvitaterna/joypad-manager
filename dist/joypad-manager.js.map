{"version":3,"sources":["webpack://JoypadManager/webpack/universalModuleDefinition","webpack://JoypadManager/webpack/bootstrap","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/createClass.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://JoypadManager/./node_modules/@babel/runtime/regenerator/index.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/inherits.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://JoypadManager/./node_modules/regenerator-runtime/runtime.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/typeof.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://JoypadManager/./src/JoypadEventTracker.ts","webpack://JoypadManager/./src/event-names.ts","webpack://JoypadManager/./src/JoypadEventEmitter.ts","webpack://JoypadManager/./src/mappings/default-mapping.ts","webpack://JoypadManager/./src/mappings/nintendo-switch.ts","webpack://JoypadManager/./src/mappings/xbox-mapping.ts","webpack://JoypadManager/./src/mappings/index.ts","webpack://JoypadManager/./src/generate-button-state.ts","webpack://JoypadManager/./src/Joypad.ts","webpack://JoypadManager/./src/JoypadManager.ts","webpack://JoypadManager/./src/index.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACNA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,iC;;;;;;ACfA,iBAAiB,mBAAO,CAAC,CAAqB;;;;;;;ACA9C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,mC;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACPA,qBAAqB,mBAAO,CAAC,CAAkB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,2B;;;;;;ACjBA,cAAc,mBAAO,CAAC,EAAmB;;AAEzC,4BAA4B,mBAAO,CAAC,EAAyB;;AAE7D;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4C;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,SAAE;AAClD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;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","file":"joypad-manager.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JoypadManager\"] = factory();\n\telse\n\t\troot[\"JoypadManager\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","import type { JoypadEventName } from './JoypadEventEmitter';\n\nexport default class JoypadEventTracker {\n  callbacks: Function[] = [];\n\n  constructor(\n    public name: JoypadEventName,\n  ) {}\n\n  registerCallback(callback: Function) {\n    this.callbacks.push(callback);\n  }\n\n  unRegisterCallback(callback: Function) {\n    this.callbacks = this.callbacks.filter((c) => c !== callback);\n  }\n}\n","import type { JoypadEventName } from './JoypadEventEmitter';\n\nconst GAMEPAD_CONNECT = 'connect' as JoypadEventName;\nconst GAMEPAD_DISCONNECT = 'disconnect' as JoypadEventName;\nconst BUTTON_PRESS = 'buttonpress' as JoypadEventName;\nconst BUTTON_RELEASE = 'buttonrelease' as JoypadEventName;\nconst BUTTON_CHANGE = 'buttonchange' as JoypadEventName;\nconst AXIS_MOVE = 'axismove' as JoypadEventName;\n\nexport {\n  GAMEPAD_CONNECT,\n  GAMEPAD_DISCONNECT,\n  BUTTON_PRESS,\n  BUTTON_RELEASE,\n  AXIS_MOVE,\n  BUTTON_CHANGE,\n};\n","import JoypadEventTracker from './JoypadEventTracker';\nimport * as JOYPAD_EVENTS from './event-names';\n// eslint-disable-next-line import/no-duplicates\nimport type Joypad from './Joypad';\n// eslint-disable-next-line import/no-duplicates\nimport type { ButtonState, AxisState } from './Joypad';\n\nexport interface JoypadButtonEvent {\n  button: ButtonState;\n  joypad: Joypad;\n  nativeButton: GamepadButton;\n  nativePad: Gamepad;\n  index: number;\n}\n\n// no need for native axis - it's just a value\nexport interface JoypadAxisEvent {\n  axis: AxisState;\n  joypad: Joypad;\n  nativePad: Gamepad;\n  nativeAxis: {\n    value: number;\n  };\n  index: number;\n}\n\nexport interface JoypadEvent {\n  joypad: Joypad;\n  nativePad: Gamepad | null;\n}\n\nexport interface JoypadEventMap {\n  connect: JoypadEvent;\n  disconnect: JoypadEvent;\n  buttonpress: JoypadButtonEvent;\n  buttonrelease: JoypadButtonEvent;\n  buttonchange: JoypadButtonEvent;\n  axismove: JoypadAxisEvent;\n}\n\nexport type JoypadEventName = keyof JoypadEventMap;\n\nfunction generateEvents() {\n  return {\n    [JOYPAD_EVENTS.GAMEPAD_CONNECT]: new JoypadEventTracker(JOYPAD_EVENTS.GAMEPAD_CONNECT),\n    [JOYPAD_EVENTS.GAMEPAD_DISCONNECT]: new JoypadEventTracker(JOYPAD_EVENTS.GAMEPAD_DISCONNECT),\n    [JOYPAD_EVENTS.BUTTON_PRESS]: new JoypadEventTracker(JOYPAD_EVENTS.BUTTON_PRESS),\n    [JOYPAD_EVENTS.BUTTON_RELEASE]: new JoypadEventTracker(JOYPAD_EVENTS.BUTTON_RELEASE),\n    [JOYPAD_EVENTS.BUTTON_CHANGE]: new JoypadEventTracker(JOYPAD_EVENTS.BUTTON_CHANGE),\n    [JOYPAD_EVENTS.AXIS_MOVE]: new JoypadEventTracker(JOYPAD_EVENTS.AXIS_MOVE),\n  } as {[key in JoypadEventName]: JoypadEventTracker};\n}\n\nexport default class JoypadEventEmitter {\n  events = generateEvents();\n\n  dispatchEvent<K extends keyof JoypadEventMap>(eventName: JoypadEventName, event: JoypadEventMap[K]) {\n    this.events[eventName].callbacks.forEach((callback) => {\n      callback(event);\n    });\n  }\n\n  addEventListener<K extends keyof JoypadEventMap>(name: K, callback: (event: JoypadEventMap[K]) => void) {\n    this.events[name].registerCallback(callback);\n  }\n\n  removeEventListener<K extends keyof JoypadEventMap>(name: K, callback: (event: JoypadEventMap[K]) => void) {\n    this.events[name].unRegisterCallback(callback);\n  }\n}\n","export default {\n  ids: [\n    'default',\n  ],\n  buttons: [\n    {\n      name: 'buttonSouth',\n    },\n    {\n      name: 'buttonEast',\n    },\n    {\n      name: 'buttonWest',\n    },\n    {\n      name: 'buttonNorth',\n    },\n    {\n      name: 'leftShoulder',\n    },\n    {\n      name: 'rightShoulder',\n    },\n    {\n      name: 'leftTrigger',\n      analog: true,\n    },\n    {\n      name: 'rightTrigger',\n      analog: true,\n    },\n    {\n      name: 'select',\n    },\n    {\n      name: 'start',\n    },\n    {\n      name: 'leftStickButton',\n    },\n    {\n      name: 'rightStickButton',\n    },\n    {\n      name: 'up',\n    },\n    {\n      name: 'down',\n    },\n    {\n      name: 'left',\n    },\n    {\n      name: 'right',\n    },\n    {\n      name: 'home',\n    },\n    {\n      name: 'share',\n    },\n  ],\n  axes: [\n    {\n      name: 'leftStickX',\n    },\n    {\n      name: 'leftStickY',\n    },\n    {\n      name: 'rightStickX',\n    },\n    {\n      name: 'rightStickY',\n    },\n  ],\n};\n","import defaultMapping from './default-mapping';\n\nexport default {\n  ids: [\n    'Pro Controller (STANDARD GAMEPAD Vendor: 057e Product: 2009)',\n    '057e-2009-Pro Controller',\n    'Joy-Con L+R (STANDARD GAMEPAD Vendor: 057e Product: 200e)',\n  ],\n  buttons: [\n    {\n      name: 'buttonSouth',\n    },\n    {\n      name: 'buttonEast',\n    },\n    {\n      name: 'buttonWest',\n    },\n    {\n      name: 'buttonNorth',\n    },\n    {\n      name: 'leftShoulder',\n    },\n    {\n      name: 'rightShoulder',\n    },\n    {\n      name: 'leftTrigger',\n    },\n    {\n      name: 'rightTrigger',\n    },\n    {\n      name: 'select',\n    },\n    {\n      name: 'start',\n    },\n    {\n      name: 'leftStickButton',\n    },\n    {\n      name: 'rightStickButton',\n    },\n    {\n      name: 'up',\n    },\n    {\n      name: 'down',\n    },\n    {\n      name: 'left',\n    },\n    {\n      name: 'right',\n    },\n    {\n      name: 'home',\n    },\n    {\n      name: 'share',\n    },\n  ],\n  axes: defaultMapping.axes,\n};\n","import defaultMapping from './default-mapping';\n\nexport default {\n  ids: [\n    'Xbox 360 Controller (XInput STANDARD GAMEPAD)',\n    'xinput',\n  ],\n  buttons: defaultMapping.buttons,\n  axes: defaultMapping.axes,\n};\n","import nintendoSwitch from './nintendo-switch';\nimport defaultMapping from './default-mapping';\nimport xboxoneMapping from './xbox-mapping';\n\nexport interface AxisMapping {\n  name: string;\n}\n\nexport interface ButtonMapping {\n  name: string;\n  analog?: boolean;\n}\n\nexport interface JoypadMap {\n  ids: string[];\n  buttons?: ButtonMapping[];\n  axes?: AxisMapping[];\n}\n\nexport default [\n  defaultMapping,\n  xboxoneMapping,\n  nintendoSwitch,\n] as JoypadMap[];\n","import mappings, { JoypadMap } from './mappings';\nimport type { ButtonState, AxisState } from './Joypad';\n\nexport default function generateButtonState(id: string, customMappings: JoypadMap[]) {\n  const gamepadMap = mappings.concat(customMappings).find((mapping) => mapping.ids.includes(id)) || mappings[0];\n\n  const buttons = (gamepadMap.buttons || []).map((button) => ({\n    analog: !!button.analog,\n    value: 0,\n    name: button.name,\n  } as ButtonState));\n\n  const axes = (gamepadMap.axes || []).map((axis) => ({\n    value: 0,\n    name: axis.name,\n  } as AxisState));\n\n  return {\n    axes,\n    buttons,\n  };\n}\n","import JoypadEventEmitter from './JoypadEventEmitter';\nimport * as JOYPAD_EVENTS from './event-names';\nimport generateButtonState from './generate-button-state';\nimport type { JoypadConfig } from './JoypadManager';\nimport type { JoypadMap } from './mappings';\n\nexport interface AxisState {\n  name: string;\n  value: number;\n}\n\nexport interface ButtonState {\n  analog: boolean;\n  name: string;\n  value: number;\n}\n\nexport interface VibrationParameters {\n  startDelay: number;\n  duration: number;\n  weakMagnitude: number;\n  strongMagnitude: number;\n}\n\nexport interface VibrationActuator {\n  playEffect: (type: 'dual-rumble', parameters: VibrationParameters) => Promise<'invalid-parameter' | 'complete' | 'preempted'>;\n  reset: () => Promise<'complete'>;\n}\n\ninterface Gamepad extends globalThis.Gamepad {\n  vibrationActuator?: VibrationActuator;\n}\n\nexport default class Joypad extends JoypadEventEmitter {\n  private buttonState!: ReturnType<typeof generateButtonState>;\n\n  private connected = false;\n\n  private nativePad?: Gamepad;\n\n  /**\n   * The id - retrieved from the native id\n   */\n  id?: string;\n\n  /**\n   * @param index the gamepad index in the JoypadManager.joypads array\n   * @param joypadConfig the joypad config\n   * @param mappings custom gamepad button mappings\n   */\n  constructor(\n    readonly index: number,\n    private joypadConfig: JoypadConfig,\n    private mappings: JoypadMap[],\n  ) {\n    super();\n  }\n\n  get buttons() {\n    return this.buttonState.buttons;\n  }\n\n  get axes() {\n    return this.buttonState.axes;\n  }\n\n  /**\n   * Set the id\n   * @param id the native id\n   */\n  private setId(id: string) {\n    if (this.id !== id) {\n      this.id = id;\n      this.buttonState = generateButtonState(this.id, this.mappings);\n    }\n  }\n\n  /**\n   * Check of the controller is connected\n   */\n  get isConnected() {\n    return this.connected;\n  }\n\n  /**\n   * The function to call to initiate the connect event\n   * @param nativePad the native HTML5 Gamepad\n   */\n  private connect(nativePad: Gamepad) {\n    this.setId(nativePad.id);\n    this.connected = true;\n    this.dispatchEvent('connect', {\n      joypad: this,\n      nativePad,\n    });\n  }\n\n  /**\n   * The function to call to initiate the disconnect event\n   * @param nativePad the native HTML5 Gamepad\n   */\n  private disconnect(nativePad: Gamepad | null) {\n    if (this.connected) {\n      this.connected = false;\n      this.dispatchEvent('disconnect', {\n        joypad: this,\n        nativePad,\n      });\n    }\n  }\n\n  /**\n   * The main update loop function\n   * @param nativePad the native HTML5 Gamepad object\n   */\n  update(nativePad: Gamepad | null) {\n    if (!nativePad || !nativePad.connected) {\n      if (this.connected) {\n        this.disconnect(nativePad);\n      }\n      return;\n    } if (nativePad?.connected && !this.connected) {\n      this.connect(nativePad);\n    }\n    if (nativePad && this.nativePad !== nativePad) {\n      this.nativePad = nativePad;\n    }\n    if (!this.id) {\n      this.setId(nativePad.id);\n    }\n    nativePad.buttons.forEach((nativeButton, index) => {\n      const buttonState = this.buttonState.buttons[index];\n      if (!buttonState) {\n        return;\n      }\n\n      // if a button value is different than the new value\n      if (nativeButton.value !== buttonState.value) {\n        // if it is analog, check against the threshold\n        if (buttonState.analog) {\n          if (\n            // always send event if value is 0 or 1\n            nativeButton.value === 1 || buttonState.value === 1 || nativeButton.value === 0 || buttonState.value === 0\n            // send event if the change is larger than the threshold\n            || Math.abs(nativeButton.value - buttonState.value) >= this.joypadConfig.analogThreshold) {\n            buttonState.value = nativeButton.value;\n            this.dispatchEvent('buttonchange', {\n              button: buttonState,\n              joypad: this,\n              nativeButton,\n              nativePad,\n              index,\n            });\n          }\n        }\n\n        // we will still process these events for analog buttons so analog buttons can be treated as digital\n        if (nativeButton.value === 1 && buttonState.value === 0) {\n          buttonState.value = nativeButton.value;\n          this.dispatchEvent('buttonpress', {\n            button: buttonState,\n            joypad: this,\n            nativeButton,\n            nativePad,\n            index,\n          });\n        } else if (nativeButton.value === 0 && buttonState.value === 1) {\n          buttonState.value = nativeButton.value;\n          this.dispatchEvent('buttonrelease', {\n            button: buttonState,\n            joypad: this,\n            nativeButton,\n            nativePad,\n            index,\n          });\n        }\n      }\n    });\n\n    nativePad.axes.forEach((value, index) => {\n      const axisState = this.buttonState.axes[index];\n      const nativeValue = Math.abs(value);\n      const stateValue = Math.abs(axisState.value);\n      const nativeIsDead = nativeValue <= this.joypadConfig.axisDeadzone;\n      const stateIsDead = stateValue <= this.joypadConfig.axisDeadzone;\n      if (!axisState) {\n        return;\n      }\n      if (nativeValue !== stateValue) {\n        if (\n        // do not send event if both are dead - means both are considered zero\n          stateIsDead !== nativeIsDead\n            // OR send event if either are dead or either are 1\n            || !stateIsDead || !nativeIsDead\n            // OR send event if they are 1\n            || nativeValue === 1 || stateValue === 1\n        ) {\n          axisState.value = nativeIsDead ? 0 : value;\n          this.dispatchEvent(JOYPAD_EVENTS.AXIS_MOVE, {\n            axis: axisState,\n            joypad: this,\n            nativePad,\n            nativeAxis: {\n              value,\n            },\n            index,\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   *\n   * @param parameters vibrations paramter\n   */\n  async vibrate({\n    startDelay = 0,\n    duration = 1000,\n    weakMagnitude = 1,\n    strongMagnitude = 1,\n  }: Partial<VibrationParameters> = {\n    startDelay: 0,\n    duration: 1000,\n    weakMagnitude: 1,\n    strongMagnitude: 1,\n  }) {\n    return this.nativePad?.vibrationActuator?.playEffect('dual-rumble', {\n      startDelay,\n      duration,\n      weakMagnitude,\n      strongMagnitude,\n    });\n  }\n\n  async stopVibrate() {\n    return this.nativePad?.vibrationActuator?.reset();\n  }\n}\n","import Joypad from './Joypad';\nimport { JoypadMap } from './mappings';\n\nexport interface JoypadConfig {\n  /**\n   * The max number of joypads you plan on using.\n   * The JoypadManager will loop through this many Joypads each update cycle.\n   */\n  maxJoypads: number;\n  /**\n   * The threshold for analog movement.\n   */\n  analogThreshold: number;\n  /**\n   * The analog stick deadzone\n   */\n  axisDeadzone: number;\n}\n\nexport default class JoypadManager {\n  /**\n   * The array of joypads.\n   */\n  readonly joypads: Joypad[] = [];\n\n  /**\n   * Initiate the JoypadManager\n   * @param joypadConfig Optional Joypad configuration\n   * @param mappings Custom list of mappings\n   */\n  constructor(\n    {\n      analogThreshold = 0.1,\n      axisDeadzone = 0.15,\n      maxJoypads = 4,\n    }: Partial<JoypadConfig> = {\n      analogThreshold: 0.1,\n      axisDeadzone: 0.15,\n      maxJoypads: 4,\n    },\n    mappings: JoypadMap[] = [],\n  ) {\n    for (let i = 0; i < maxJoypads; i += 1) {\n      this.joypads[i] = new Joypad(i, { analogThreshold, axisDeadzone, maxJoypads }, mappings);\n    }\n  }\n\n  /**\n   * The main update loop - updates every joypad and passes the reference to the native gamepad.\n   */\n  update() {\n    const nativePads = navigator.getGamepads();\n    this.joypads.forEach((joypad, index) => {\n      const nativePad = nativePads[index];\n      joypad.update(nativePad);\n    });\n  }\n}\n","import JoypadManager from './JoypadManager';\n\nexport default JoypadManager;\n"],"sourceRoot":""}