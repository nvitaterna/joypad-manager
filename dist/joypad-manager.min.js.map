{"version":3,"sources":["webpack://JoypadManager/webpack/universalModuleDefinition","webpack://JoypadManager/webpack/bootstrap","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/createClass.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/inherits.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/typeof.js","webpack://JoypadManager/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://JoypadManager/./src/JoypadEventTracker.ts","webpack://JoypadManager/./src/JoypadEventEmitter.ts","webpack://JoypadManager/./src/event-names.ts","webpack://JoypadManager/./src/mappings/default-mapping.ts","webpack://JoypadManager/./src/mappings/index.ts","webpack://JoypadManager/./src/mappings/xbox-mapping.ts","webpack://JoypadManager/./src/mappings/nintendo-switch.ts","webpack://JoypadManager/./src/Joypad.ts","webpack://JoypadManager/./src/generate-button-state.ts","webpack://JoypadManager/./src/JoypadManager.ts","webpack://JoypadManager/./src/index.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","configurable","writable","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","protoProps","staticProps","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","constructor","_typeof","assertThisInitialized","self","_setPrototypeOf","iterator","ReferenceError","callbacks","callback","push","filter","events","ids","buttons","analog","axes","index","joypadConfig","mappings","connected","id","buttonState","customMappings","gamepadMap","concat","find","mapping","includes","map","button","axis","generateButtonState","nativePad","setId","dispatchEvent","joypad","connect","forEach","nativeButton","Math","abs","analogThreshold","axisState","nativeValue","stateValue","nativeIsDead","axisDeadzone","stateIsDead","disconnect","hapticActuators","pulse","vibrationActuator","playEffect","startDelay","duration","weakMagnitude","strongMagnitude","eventName","event","registerCallback","unRegisterCallback","configDefaults","maxJoypads","joypads","parsedConfig","nativePads","navigator","getGamepads","update"],"mappings":"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","file":"joypad-manager.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JoypadManager\"] = factory();\n\telse\n\t\troot[\"JoypadManager\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","import {\n  JoypadEventName,\n} from './types';\n\nexport default class JoypadEventTracker {\n  callbacks: Function[] = [];\n\n  constructor(\n    public name: JoypadEventName,\n  ) {}\n\n  registerCallback(callback: Function) {\n    this.callbacks.push(callback);\n  }\n\n  unRegisterCallback(callback: Function) {\n    this.callbacks = this.callbacks.filter((c) => c !== callback);\n  }\n}\n","import JoypadEventTracker from './JoypadEventTracker';\nimport * as JOYPAD_EVENTS from './event-names';\nimport {\n  JoypadEventName, JoypadEventMap,\n} from './types';\n\nconst events = {\n  [JOYPAD_EVENTS.GAMEPAD_CONNECT]: new JoypadEventTracker(JOYPAD_EVENTS.GAMEPAD_CONNECT),\n  [JOYPAD_EVENTS.GAMEPAD_DISCONNECT]: new JoypadEventTracker(JOYPAD_EVENTS.GAMEPAD_DISCONNECT),\n  [JOYPAD_EVENTS.BUTTON_PRESS]: new JoypadEventTracker(JOYPAD_EVENTS.BUTTON_PRESS),\n  [JOYPAD_EVENTS.BUTTON_RELEASE]: new JoypadEventTracker(JOYPAD_EVENTS.BUTTON_RELEASE),\n  [JOYPAD_EVENTS.BUTTON_CHANGE]: new JoypadEventTracker(JOYPAD_EVENTS.BUTTON_CHANGE),\n  [JOYPAD_EVENTS.AXIS_MOVE]: new JoypadEventTracker(JOYPAD_EVENTS.AXIS_MOVE),\n} as {[key in JoypadEventName]: JoypadEventTracker};\n\nexport default class JoypadEventEmitter {\n  events = events;\n\n  dispatchEvent<K extends keyof JoypadEventMap>(eventName: JoypadEventName, event: JoypadEventMap[K]) {\n    this.events[eventName].callbacks.forEach((callback) => {\n      callback(event);\n    });\n  }\n\n  addEventListener<K extends keyof JoypadEventMap>(name: K, callback: (event: JoypadEventMap[K]) => void) {\n    this.events[name].registerCallback(callback);\n  }\n\n  removeEventListener<K extends keyof JoypadEventMap>(name: K, callback: (event: JoypadEventMap[K]) => void) {\n    this.events[name].unRegisterCallback(callback);\n  }\n}\n","import { JoypadEventName } from './types';\n\nconst GAMEPAD_CONNECT = 'connect' as JoypadEventName;\nconst GAMEPAD_DISCONNECT = 'disconnect' as JoypadEventName;\nconst BUTTON_PRESS = 'buttonpress' as JoypadEventName;\nconst BUTTON_RELEASE = 'buttonrelease' as JoypadEventName;\nconst BUTTON_CHANGE = 'buttonchange' as JoypadEventName;\nconst AXIS_MOVE = 'axismove' as JoypadEventName;\n\nexport {\n  GAMEPAD_CONNECT,\n  GAMEPAD_DISCONNECT,\n  BUTTON_PRESS,\n  BUTTON_RELEASE,\n  AXIS_MOVE,\n  BUTTON_CHANGE,\n};\n","export default {\n  ids: [\n    'default',\n  ],\n  buttons: [\n    {\n      name: 'buttonSouth',\n    },\n    {\n      name: 'buttonEast',\n    },\n    {\n      name: 'buttonWest',\n    },\n    {\n      name: 'buttonNorth',\n    },\n    {\n      name: 'leftShoulder',\n    },\n    {\n      name: 'rightShoulder',\n    },\n    {\n      name: 'leftTrigger',\n      analog: true,\n    },\n    {\n      name: 'rightTrigger',\n      analog: true,\n    },\n    {\n      name: 'select',\n    },\n    {\n      name: 'start',\n    },\n    {\n      name: 'leftStickButton',\n    },\n    {\n      name: 'rightStickButton',\n    },\n    {\n      name: 'up',\n    },\n    {\n      name: 'down',\n    },\n    {\n      name: 'left',\n    },\n    {\n      name: 'right',\n    },\n    {\n      name: 'home',\n    },\n    {\n      name: 'share',\n    },\n  ],\n  axes: [\n    {\n      name: 'leftStickX',\n    },\n    {\n      name: 'leftStickY',\n    },\n    {\n      name: 'rightStickX',\n    },\n    {\n      name: 'rightStickY',\n    },\n  ],\n};\n","import { JoypadMap } from '@/types';\nimport nintendoSwitch from './nintendo-switch';\nimport defaultMapping from './default-mapping';\nimport xboxoneMapping from './xbox-mapping';\n\nexport default [\n  defaultMapping,\n  xboxoneMapping,\n  nintendoSwitch,\n] as JoypadMap[];\n","import defaultMapping from './default-mapping';\n\nexport default {\n  ids: [\n    'Xbox 360 Controller (XInput STANDARD GAMEPAD)',\n    'xinput',\n  ],\n  buttons: defaultMapping.buttons,\n  axes: defaultMapping.axes,\n};\n","import defaultMapping from './default-mapping';\n\nexport default {\n  ids: [\n    'Pro Controller (STANDARD GAMEPAD Vendor: 057e Product: 2009)',\n    '057e-2009-Pro Controller',\n    'Joy-Con L+R (STANDARD GAMEPAD Vendor: 057e Product: 200e)',\n  ],\n  buttons: [\n    {\n      name: 'buttonSouth',\n    },\n    {\n      name: 'buttonEast',\n    },\n    {\n      name: 'buttonWest',\n    },\n    {\n      name: 'buttonNorth',\n    },\n    {\n      name: 'leftShoulder',\n    },\n    {\n      name: 'rightShoulder',\n    },\n    {\n      name: 'leftTrigger',\n    },\n    {\n      name: 'rightTrigger',\n    },\n    {\n      name: 'select',\n    },\n    {\n      name: 'start',\n    },\n    {\n      name: 'leftStickButton',\n    },\n    {\n      name: 'rightStickButton',\n    },\n    {\n      name: 'up',\n    },\n    {\n      name: 'down',\n    },\n    {\n      name: 'left',\n    },\n    {\n      name: 'right',\n    },\n    {\n      name: 'home',\n    },\n    {\n      name: 'share',\n    },\n  ],\n  axes: defaultMapping.axes,\n};\n","import JoypadEventEmitter from './JoypadEventEmitter';\nimport * as JOYPAD_EVENTS from './event-names';\nimport generateButtonState from './generate-button-state';\nimport { JoypadMap, JoypadConfig } from './types';\n\nexport default class Joypad extends JoypadEventEmitter {\n  /**\n   * Button state object\n   */\n  private buttonState!: ReturnType<typeof generateButtonState>;\n\n  /**\n   * Whether or not the controller is connected\n   */\n  private connected = false;\n\n  private nativePad?: Gamepad;\n\n  /**\n   * The id - retrieved from the native id\n   */\n  id?: string;\n\n  /**\n   * @param index the gamepad index in the JoypadManager.joypads array\n   * @param joypadConfig the joypad config\n   * @param mappings custom gamepad button mappings\n   */\n  constructor(\n    readonly index: number,\n    private joypadConfig: JoypadConfig,\n    private mappings: JoypadMap[],\n  ) {\n    super();\n  }\n\n  /**\n   * Set the id\n   * @param id the native id\n   */\n  private setId(id: string) {\n    if (this.id !== id) {\n      this.id = id;\n      this.buttonState = generateButtonState(this.id, this.mappings);\n    }\n  }\n\n  /**\n   * Check of the controller is connected\n   */\n  get isConnected() {\n    return this.connected;\n  }\n\n  /**\n   * The function to call to initiate the connect event\n   * @param nativePad the native HTML5 Gamepad\n   */\n  private connect(nativePad: Gamepad) {\n    this.setId(nativePad.id);\n    this.connected = true;\n    this.dispatchEvent('connect', {\n      joypad: this,\n      nativePad,\n    });\n  }\n\n  /**\n   * The function to call to initiate the disconnect event\n   * @param nativePad the native HTML5 Gamepad\n   */\n  private disconnect(nativePad: Gamepad | null) {\n    if (this.connected) {\n      this.connected = false;\n      this.dispatchEvent('disconnect', {\n        joypad: this,\n        nativePad,\n      });\n    }\n  }\n\n  /**\n   * The main update loop function\n   * @param nativePad the native HTML5 Gamepad object\n   */\n  update(nativePad: Gamepad | null) {\n    if (!nativePad || !nativePad.connected) {\n      if (this.connected) {\n        this.disconnect(nativePad);\n      }\n      return;\n    } if (nativePad?.connected && !this.connected) {\n      this.connect(nativePad);\n    }\n    if (nativePad && this.nativePad !== nativePad) {\n      this.nativePad = nativePad;\n    }\n    if (!this.id) {\n      this.setId(nativePad.id);\n    }\n    nativePad.buttons.forEach((nativeButton, index) => {\n      const buttonState = this.buttonState.buttons[index];\n      if (!buttonState) {\n        return;\n      }\n\n      // if a button value is different than the new value\n      if (nativeButton.value !== buttonState.value) {\n        // if it is analog, check against the threshold\n        if (buttonState.analog) {\n          if (\n            // always send event if value is 0 or 1\n            nativeButton.value === 1 || buttonState.value === 1 || nativeButton.value === 0 || buttonState.value === 0\n            // send event if the change is larger than the threshold\n            || Math.abs(nativeButton.value - buttonState.value) >= this.joypadConfig.analogThreshold) {\n            buttonState.value = nativeButton.value;\n            this.dispatchEvent('buttonchange', {\n              button: buttonState,\n              joypad: this,\n              nativeButton,\n              nativePad,\n              index,\n            });\n          }\n        }\n\n        // we will still process these events for analog buttons so analog buttons can be treated as digital\n        if (nativeButton.value === 1 && buttonState.value === 0) {\n          buttonState.value = nativeButton.value;\n          this.dispatchEvent('buttonpress', {\n            button: buttonState,\n            joypad: this,\n            nativeButton,\n            nativePad,\n            index,\n          });\n        } else if (nativeButton.value === 0 && buttonState.value === 1) {\n          buttonState.value = nativeButton.value;\n          this.dispatchEvent('buttonrelease', {\n            button: buttonState,\n            joypad: this,\n            nativeButton,\n            nativePad,\n            index,\n          });\n        }\n      }\n    });\n\n    nativePad.axes.forEach((value, index) => {\n      const axisState = this.buttonState.axes[index];\n      const nativeValue = Math.abs(value);\n      const stateValue = Math.abs(axisState.value);\n      const nativeIsDead = nativeValue <= this.joypadConfig.axisDeadzone;\n      const stateIsDead = stateValue <= this.joypadConfig.axisDeadzone;\n      if (!axisState) {\n        return;\n      }\n      if (nativeValue !== stateValue) {\n        if (\n        // do not send event if both are dead - means both are considered zero\n          stateIsDead !== nativeIsDead\n            // OR send event if either are dead or either are 1\n            || !stateIsDead || !nativeIsDead\n            // OR send event if they are 1\n            || nativeValue === 1 || stateValue === 1\n        ) {\n          axisState.value = nativeIsDead ? 0 : value;\n          this.dispatchEvent(JOYPAD_EVENTS.AXIS_MOVE, {\n            axis: axisState,\n            joypad: this,\n            nativePad,\n            index,\n          });\n        }\n      }\n    });\n  }\n\n  vibrate() {\n    console.log((this.nativePad as any)?.vibrationActuator);\n    this.nativePad?.hapticActuators?.[0].pulse(10, 5);\n    (this.nativePad as any)?.vibrationActuator.playEffect('dual-rumble', {\n      startDelay: 0,\n      duration: 1000,\n      weakMagnitude: 0,\n      strongMagnitude: 1.0,\n    });\n  }\n}\n","import { ButtonState, AxisState, JoypadMap } from '@/types';\nimport mappings from './mappings';\n\nexport default function generateButtonState(id: string, customMappings: JoypadMap[]) {\n  const gamepadMap = mappings.concat(customMappings).find((mapping) => mapping.ids.includes(id)) || mappings[0];\n\n  const buttons = (gamepadMap.buttons || []).map((button) => ({\n    analog: !!button.analog,\n    value: 0,\n    name: button.name,\n  } as ButtonState));\n\n  const axes = (gamepadMap.axes || []).map((axis) => ({\n    value: 0,\n    name: axis.name,\n  } as AxisState));\n\n  return {\n    axes,\n    buttons,\n  };\n}\n","import Joypad from './Joypad';\nimport { JoypadMap, JoypadConfig } from './types';\n\n/**\n * The defaults for the joypad config\n */\nconst configDefaults: JoypadConfig = {\n  analogThreshold: 0.1,\n  axisDeadzone: 0.15,\n  maxJoypads: 4,\n};\n\n/**\n * The JoypadManager class used for managing joypads.\n */\nexport default class JoypadManager {\n  /**\n   * The array of joypads.\n   */\n  readonly joypads: Joypad[] = [];\n\n  /**\n   *\n   * @param joypadConfig\n   * @param mappings custom mappings\n   */\n  constructor(\n    joypadConfig: Partial<JoypadConfig> = {},\n    mappings: JoypadMap[] = [],\n  ) {\n    const parsedConfig = {\n      ...configDefaults,\n      ...joypadConfig,\n    };\n    for (let i = 0; i < parsedConfig.maxJoypads; i += 1) {\n      this.joypads[i] = new Joypad(i, parsedConfig, mappings);\n    }\n  }\n\n  /**\n   * The main update loop - update each joypad.\n   */\n  update() {\n    const nativePads = navigator.getGamepads();\n    this.joypads.forEach((joypad, index) => {\n      const nativePad = nativePads[index];\n      joypad.update(nativePad);\n    });\n  }\n}\n","import JoypadManager from './JoypadManager';\n\nexport default JoypadManager;\n"],"sourceRoot":""}